# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
#######################
#       PERSON        #
#######################
# Create on person
POST    /person                     controllers.PersonController.personCreate
# Get All person
GET     /persons                    controllers.PersonController.persons
# Get just one person
GET     /person/:id                 controllers.PersonController.person(id: Long)
# Update one person
PUT     /person/:id                 controllers.PersonController.personUpdate(id: Long)
# Delete one person
DELETE  /person/:id                 controllers.PersonController.personDelete(id: Long)
# Check if the user exist to connect
POST    /login                      controllers.PersonController.login
# Logout the person
POST    /logout                     controllers.PersonController.logout
# Check if the user is already connect or not
GET     /isConnected/:id/:token     controllers.PersonController.isConnected(id: Int, token: String)
# Get all products for a seller
GET     /person/:id/products        controllers.PersonController.getAllProductsForSeller(id: Long)
# Get all seller companies
GET     /persons/seller           controllers.PersonController.getAllSeller()
# Get all diaries for an user
GET     /person/:id/diaries        controllers.PersonController.getAllDiaryForUser(id: Long)
# Get all products in basket for an user
GET     /person/:id/baskets        controllers.PersonController.getAllProductInBasket(id: Long)
# DELETE a product in basket for an user
DELETE  /person/:id/basket/:idProd   controllers.PersonController.removeProductInBasket(id: Long, idProd: Long)
########################
#       PRODUCT        #
########################
# Get All products
GET     /products                    controllers.ProductController.products
# GET just a product by ID
GET     /product/:id                controllers.ProductController.product(id: Long)
# Create a product
POST    /product                       controllers.ProductController.productCreate
# Upate a product by the ID
PUT     /product/:id                controllers.ProductController.productUpdate(id: Long)
# Delete a product
DELETE  /product/:id                controllers.ProductController.productDelete(id: Long)
# Buy a product
PUT  /product/:id/addToBasket               controllers.ProductController.addToBasket(id: Long)

# BASKET
GET     /baskets                    controllers.BasketController.baskets
GET     /basket/:id                controllers.BasketController.basket(id: Long)

########################
#       Diaries        #
########################
# Get All diaries
GET     /diaries                  controllers.DiaryController.diaries
# GET just a diary by ID
GET     /diary/:id                controllers.DiaryController.diary(id: Long)
# Create a diary
POST    /diary                    controllers.DiaryController.diaryCreate
# Upate a diary by the ID
PUT     /diary/:id                controllers.DiaryController.diaryUpdate(id: Long)
# Delete a diary
DELETE  /diary/:id                controllers.DiaryController.diaryDelete(id: Long)


#######################
#         Lib         #
#######################
GET /lib/smart-table               controllers.Assets.at(path="/public", file="lib/smart-table.js")
GET /lib/dropzone                  controllers.Assets.at(path="/public", file="lib/dropzone.js")
GET /lib/easy-autocomplete/easy-autocompleteJS                  controllers.Assets.at(path="/public", file="lib/easy-autocomplete/easy-autocomplete.js")
GET /lib/easy-autocomplete/easy-autocompleteCSS                 controllers.Assets.at(path="/public", file="lib/easy-autocomplete/easy-autocomplete.css")
GET /lib/easy-autocomplete/easy-autocomplete-themeCSS           controllers.Assets.at(path="/public", file="lib/easy-autocomplete/easy-autocomplete-theme.css")

GET /                               controllers.Assets.at(path="/public", file="html/index.html")

GET    /js/*file               controllers.Assets.at(path="/public/javascripts", file)
GET    /*file                  controllers.Assets.at(path="/public/html", file)
GET    /lib/*file              controllers.Assets.at(path="/public/lib", file)